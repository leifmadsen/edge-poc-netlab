---
- name: Patch restricted security context
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl patch scc restricted -p '{{ item }}'
  with_items:
    - '{"allowHostDirVolumePlugin": true}'
    - '{"allowHostNetwork": true}'
    - '{"allowHostIPC": true}'
    - '{"allowHostPorts": true}'
    - '{"allowPrivilegedContainer": true}'
    - '{"allowedCapabilities": ["DAC_READ_SEARCH", "SYS_RESOURCE", "CAP_NET_RAW", "CAP_NET_ADMIN"]}'
    - '{"requiredDropCapabilities": ["KILL", "MKNOD"]}'
    - '{"runAsUser": {"type": "RunAsAny" }}'
    - '{"seLinuxContext": {"type": "RunAsAny"}}'
    - '{"volumes": ["configMap", "downwardAPI", "emptyDir", "hostPath", "persistentVolumeClaim", "projected", "secret", "nfs"]}'

- name: Label master nodes
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl label nodes testcluster-master-0 {{ item }}
  with_items:
    - "app=nfs-provisioner"
    - "role=master"
    - "ironic-control-plane=enabled"
  ignore_errors: true

- name: Deploy the NFS manifests
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl apply -f {{ lookup('env', 'WORKSPACE') }}/edge-poc-netlab/third-party/external-storage/nfs-client/deploy/{{ item }}
  with_items:
    - rbac.yaml
    - deployment.yaml
    - class.yaml

- name: Deploy the mysql manifests
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl apply -f {{ lookup('env', 'WORKSPACE') }}/edge-poc-netlab/third-party/mysql-operator/deploy/{{ item }}
  with_items:
    - rbac.yaml
    - role-binding-template.yaml
    - custom-resource-definitions.yaml
    - role-agent.yaml
    - mysql-deployment.yaml
    - cluster-with-volume.yaml

- name: Give it some time to spin up cluster ...
  pause:
      minutes: 1

- name: Wait for mysql to be up
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl get services --no-headers | grep 'mysql' | wc -l
  register: mysql_result
  until: mysql_result.stdout|int > 0
  retries: 20
  delay: 10

- name: Deploy the ironic operator
  git:
      repo: 'https://github.com/redhat-nfvpe/ironic-operator.git'
      dest: "/{{ lookup('env', 'WORKSPACE') }}/ironic-operator"

- name: Install operator files
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl apply -f {{ lookup('env', 'WORKSPACE') }}/ironic-operator/deploy/{{ item }}
  with_items:
      - crds/ironic_v1alpha1_ironic_crd.yaml
      - service_account.yaml
      - role.yaml
      - role_binding.yaml
      - operator.yaml
      - credentials.yaml
      - settings.yaml

- name: Apply ironic CR
  shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl apply -f {{ lookup('env', 'WORKSPACE') }}/ironic-operator/deploy/crds/ironic_v1alpha1_ironic_cr.yaml
